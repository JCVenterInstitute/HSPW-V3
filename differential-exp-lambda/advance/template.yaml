AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Differential Analysis Advanced Lambda. GO/KEGG Analysis

Parameters:
  DeployEnv:
    Type: String
    Default: DEV
    AllowedValues:
      - DEV
      - PROD
  ApiStage:
    Type: String
    Description: The APIGateway stage name.
    Default: v1
  S3BucketName:
    Type: String
  SupportEmail:
    Type: String
  SubmissionTable:
    Type: String
  AwsRegion:
    Type: String

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "Differential-Analysis-Advance-${DeployEnv}"
      StageName: !Ref ApiStage
      EndpointConfiguration: REGIONAL
      BinaryMediaTypes:
        - "*/*"

  HSPDiffExpRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: HSP-Differential-Expression-Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - lambda.amazonaws.com
                - !Sub states.${AWS::Region}.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: HSP-Api-Execution-Role-Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: Lambda
                Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"
              - Sid: LogsAccess
                Effect: "Allow"
                Action:
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "logs:GetLogEvents"
                  - "logs:FilterLogEvents"
                Resource: "*"
              - Sid: ParameterStore
                Effect: "Allow"
                Action:
                  - "ssm:GetParametersByPath"
                  - "ssm:GetParameter"
                  - "ssm:GetParameters"
                  - "ssm:DescribeParameters"
                  - "ssm:PutParameter"
                Resource: "*"
              - Sid: S3Access
                Effect: "Allow"
                Action:
                  - "s3:PutObjectTagging"
                  - "s3:PutObjectAcl"
                  - "s3:PutObject"
                  - "s3:ListMultipartUploadParts"
                  - "s3:ListBucketMultipartUploads"
                  - "s3:ListBucket"
                  - "s3:GetObjectVersion"
                  - "s3:GetObjectAcl"
                  - "s3:GetObject"
                  - "s3:GetEncryptionConfiguration"
                  - "s3:GetBucketWebsite"
                  - "s3:GetBucketPolicy"
                  - "s3:GetBucketLocation"
                  - "s3:GetBucketCORS"
                  - "s3:GetBucketAcl"
                  - "s3:DeleteObject"
                  - "s3:AbortMultipartUpload"
                Resource: "*"
              - Sid: DynamoDbAccess
                Effect: "Allow"
                Action:
                  - "dynamodb:UpdateItem"
                Resource: "*"

  AdvanceAnalysis:
    Type: AWS::Serverless::Function
    Metadata:
      DockerContext: .
      Dockerfile: Dockerfile
    Properties:
      PackageType: Image
      FunctionName: !Sub "Differential-Analysis-Advance-${DeployEnv}"
      Description: Differential Analysis Advance
      Role: !GetAtt HSPDiffExpRole.Arn
      MemorySize: 8000
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref S3BucketName
          SUPPORT_EMAIL: !Ref SupportEmail
          SUBMISSIONS_TABLE: !Ref SubmissionTable
          REGION: !Ref AwsRegion
      Timeout: 900

  AdvanceAnalysisTrigger:
    Type: AWS::Serverless::Function
    Properties:
      Handler: advance_trigger.handler
      Runtime: nodejs16.x
      FunctionName: !Sub "Differential-Analysis-Advance-Trigger-${DeployEnv}"
      Description: Trigger Start of Advance Differential Analysis
      Role: !GetAtt HSPDiffExpRole.Arn
      Environment:
        Variables:
          DEPLOY_ENV: !Ref DeployEnv
      Timeout: 60
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY

Outputs:
  ApiGatewayApiConsoleUrl:
    Description: Console URL for the API Gateway API's Stage.
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/apigateway/home?region=${AWS::Region}#/apis/${ApiGateway}/stages/${ApiStage}"
  ApiUrl:
    Description:
      Invoke URL for your API. Clicking this link will perform a GET request
      on the root resource of your API.
    Value: !Sub "https://${ApiGateway}/.execute-api.${AWS::Region}.amazon.aws.com/${ApiStage}"
