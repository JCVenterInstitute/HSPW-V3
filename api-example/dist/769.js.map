{"version":3,"sources":["webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/endpoint/EndpointParameters.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/models/SSOServiceException.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/models/models_0.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/protocols/Aws_restJson1.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/commands/GetRoleCredentialsCommand.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/auth/httpAuthSchemeProvider.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/endpoint/ruleset.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/endpoint/endpointResolver.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/auth/httpAuthExtensionConfiguration.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/SSOClient.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.shared.js","webpack://server/./node_modules/@aws-sdk/client-sso/dist-es/runtimeExtensions.js"],"names":["commonParams","UseFIPS","type","name","Endpoint","Region","UseDualStack","SSOServiceException","constructor","options","super","Object","setPrototypeOf","this","prototype","InvalidRequestException","opts","$fault","ResourceNotFoundException","TooManyRequestsException","UnauthorizedException","GetRoleCredentialsRequestFilterSensitiveLog","obj","accessToken","RoleCredentialsFilterSensitiveLog","secretAccessKey","sessionToken","GetRoleCredentialsResponseFilterSensitiveLog","roleCredentials","se_GetRoleCredentialsCommand","async","input","context","b","headers","isSerializableHeaderValue","_xasbt","_aT","bp","query","_rn","_rN","_ai","_aI","m","h","q","body","build","de_GetRoleCredentialsCommand","output","statusCode","de_CommandError","contents","$metadata","deserializeMetadata","data","doc","assign","parsedOutput","errorCode","de_InvalidRequestExceptionRes","de_ResourceNotFoundExceptionRes","de_TooManyRequestsExceptionRes","de_UnauthorizedExceptionRes","parsedBody","throwDefaultError","message","exception","httpStatusCode","requestId","extendedRequestId","cfId","value","getOwnPropertyNames","includes","length","size","GetRoleCredentialsCommand","ep","Command","cs","config","o","serialize","deserialize","getEndpointParameterInstructions","s","n","f","ser","de","defaultSSOHttpAuthSchemeParametersProvider","operation","region","Error","defaultSSOHttpAuthSchemeProvider","authParameters","push","schemeId","signingProperties","propertiesExtractor","createAwsAuthSigv4HttpAuthOption","u","v","w","x","c","d","e","g","i","j","k","l","p","r","t","ruleSet","version","parameters","rules","conditions","error","endpoint","url","properties","defaultEndpointResolver","endpointParams","logger","getHttpAuthExtensionConfiguration","runtimeConfig","_httpAuthSchemes","httpAuthSchemes","_httpAuthSchemeProvider","httpAuthSchemeProvider","_credentials","credentials","setHttpAuthScheme","httpAuthScheme","index","findIndex","scheme","splice","setHttpAuthSchemeProvider","setCredentials","SSOClient","configuration","_config_0","process","defaultsMode","defaultConfigProvider","then","clientSharedValues","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","endpointProvider","extensions","identityProvider","ipc","getIdentityProvider","signer","AwsSdkSigV4Signer","serviceId","urlParser","utf8Decoder","utf8Encoder","runtime","bodyLengthChecker","defaultUserAgentProvider","clientVersion","maxAttempts","requestHandler","retryMode","default","sha256","streamCollector","useDualstackEndpoint","useFipsEndpoint","_config_1","defaultSigningName","_config_2","_config_3","_config_4","_config_5","_config_8","extensionConfiguration","forEach","extension","configure","resolveRuntimeExtensions","resolveAwsSdkSigV4Config","middlewareStack","use","httpAuthSchemeParametersProvider","getDefaultHttpAuthSchemeParametersProvider","identityProviderConfigProvider","getIdentityProviderConfigProvider","destroy"],"mappings":"iLAAO,MAQMA,EAAe,CACxBC,QAAS,CAAEC,KAAM,gBAAiBC,KAAM,mBACxCC,SAAU,CAAEF,KAAM,gBAAiBC,KAAM,YACzCE,OAAQ,CAAEH,KAAM,gBAAiBC,KAAM,UACvCG,aAAc,CAAEJ,KAAM,gBAAiBC,KAAM,yBCV1C,MAAMI,UAA4B,KACrCC,YAAYC,GACRC,MAAMD,GACNE,OAAOC,eAAeC,KAAMN,EAAoBO,UACpD,ECJG,MAAMC,UAAgC,EACzCP,YAAYQ,GACRN,MAAM,CACFP,KAAM,0BACNc,OAAQ,YACLD,IAEPH,KAAKV,KAAO,0BACZU,KAAKI,OAAS,SACdN,OAAOC,eAAeC,KAAME,EAAwBD,UACxD,EAEG,MAAMI,UAAkC,EAC3CV,YAAYQ,GACRN,MAAM,CACFP,KAAM,4BACNc,OAAQ,YACLD,IAEPH,KAAKV,KAAO,4BACZU,KAAKI,OAAS,SACdN,OAAOC,eAAeC,KAAMK,EAA0BJ,UAC1D,EAEG,MAAMK,UAAiC,EAC1CX,YAAYQ,GACRN,MAAM,CACFP,KAAM,2BACNc,OAAQ,YACLD,IAEPH,KAAKV,KAAO,2BACZU,KAAKI,OAAS,SACdN,OAAOC,eAAeC,KAAMM,EAAyBL,UACzD,EAEG,MAAMM,UAA8B,EACvCZ,YAAYQ,GACRN,MAAM,CACFP,KAAM,wBACNc,OAAQ,YACLD,IAEPH,KAAKV,KAAO,wBACZU,KAAKI,OAAS,SACdN,OAAOC,eAAeC,KAAMO,EAAsBN,UACtD,EAEG,MAAMO,EAA+CC,IAAQ,IAC7DA,KACCA,EAAIC,aAAe,CAAEA,YAAa,QAE7BC,EAAqCF,IAAQ,IACnDA,KACCA,EAAIG,iBAAmB,CAAEA,gBAAiB,SAC1CH,EAAII,cAAgB,CAAEA,aAAc,QAE/BC,EAAgDL,IAAQ,IAC9DA,KACCA,EAAIM,iBAAmB,CAAEA,gBAAiBJ,EAAkCF,EAAIM,oB,wBCxDjF,MAAMC,EAA+BC,MAAOC,EAAOC,KACtD,MAAMC,GAAI,QAAGF,EAAOC,GACdE,GAAU,QAAI,CAAC,EAAGC,EAA2B,CAC/C,CAACC,GAASL,EAAMM,KAEpBJ,EAAEK,GAAG,2BACL,MAAMC,GAAQ,QAAI,CACd,CAACC,GAAM,CAAC,EAAE,QAAgBT,EAAMU,GAAM,aACtC,CAACC,GAAM,CAAC,EAAE,QAAgBX,EAAMY,GAAM,gBAI1C,OADAV,EAAEW,EAAE,OAAOC,EAAEX,GAASY,EAAEP,GAAON,OAD3Bc,GAEGd,EAAEe,OAAO,EAyCPC,EAA+BnB,MAAOoB,EAAQlB,KACvD,GAA0B,MAAtBkB,EAAOC,YAAsBD,EAAOC,YAAc,IAClD,OAAOC,EAAgBF,EAAQlB,GAEnC,MAAMqB,GAAW,QAAI,CACjBC,UAAWC,EAAoBL,KAE7BM,GAAO,SAAgB,cAAqB,QAAUN,EAAOH,KAAMf,IAAW,QAC9EyB,GAAM,QAAKD,EAAM,CACnB5B,gBAAiB,OAGrB,OADAjB,OAAO+C,OAAOL,EAAUI,GACjBJ,CAAQ,EA0CbD,EAAkBtB,MAAOoB,EAAQlB,KACnC,MAAM2B,EAAe,IACdT,EACHH,WAAY,QAAeG,EAAOH,KAAMf,IAEtC4B,GAAY,QAAsBV,EAAQS,EAAaZ,MAC7D,OAAQa,GACJ,IAAK,0BACL,IAAK,4CACD,YAAYC,EAA8BF,EAAc3B,GAC5D,IAAK,4BACL,IAAK,8CACD,YAAY8B,EAAgCH,EAAc3B,GAC9D,IAAK,2BACL,IAAK,6CACD,YAAY+B,EAA+BJ,EAAc3B,GAC7D,IAAK,wBACL,IAAK,0CACD,YAAYgC,EAA4BL,EAAc3B,GAC1D,QACI,MAAMiC,EAAaN,EAAaZ,KAChC,OAAOmB,EAAkB,CACrBhB,SACAe,aACAL,cAEZ,EAEEM,GAAoB,QAAkB,GACtCL,EAAgC/B,MAAO6B,EAAc3B,KACvD,MAAMqB,GAAW,QAAI,CAAC,GAChBG,EAAOG,EAAaZ,KACpBU,GAAM,QAAKD,EAAM,CACnBW,QAAS,OAEbxD,OAAO+C,OAAOL,EAAUI,GACxB,MAAMW,EAAY,IAAIrD,EAAwB,CAC1CuC,UAAWC,EAAoBI,MAC5BN,IAEP,OAAO,QAA2Be,EAAWT,EAAaZ,KAAK,EAE7De,EAAkChC,MAAO6B,EAAc3B,KACzD,MAAMqB,GAAW,QAAI,CAAC,GAChBG,EAAOG,EAAaZ,KACpBU,GAAM,QAAKD,EAAM,CACnBW,QAAS,OAEbxD,OAAO+C,OAAOL,EAAUI,GACxB,MAAMW,EAAY,IAAIlD,EAA0B,CAC5CoC,UAAWC,EAAoBI,MAC5BN,IAEP,OAAO,QAA2Be,EAAWT,EAAaZ,KAAK,EAE7DgB,EAAiCjC,MAAO6B,EAAc3B,KACxD,MAAMqB,GAAW,QAAI,CAAC,GAChBG,EAAOG,EAAaZ,KACpBU,GAAM,QAAKD,EAAM,CACnBW,QAAS,OAEbxD,OAAO+C,OAAOL,EAAUI,GACxB,MAAMW,EAAY,IAAIjD,EAAyB,CAC3CmC,UAAWC,EAAoBI,MAC5BN,IAEP,OAAO,QAA2Be,EAAWT,EAAaZ,KAAK,EAE7DiB,EAA8BlC,MAAO6B,EAAc3B,KACrD,MAAMqB,GAAW,QAAI,CAAC,GAChBG,EAAOG,EAAaZ,KACpBU,GAAM,QAAKD,EAAM,CACnBW,QAAS,OAEbxD,OAAO+C,OAAOL,EAAUI,GACxB,MAAMW,EAAY,IAAIhD,EAAsB,CACxCkC,UAAWC,EAAoBI,MAC5BN,IAEP,OAAO,QAA2Be,EAAWT,EAAaZ,KAAK,EAE7DQ,EAAuBL,IAAW,CACpCmB,eAAgBnB,EAAOC,WACvBmB,UAAWpB,EAAOhB,QAAQ,qBAAuBgB,EAAOhB,QAAQ,sBAAwBgB,EAAOhB,QAAQ,oBACvGqC,kBAAmBrB,EAAOhB,QAAQ,cAClCsC,KAAMtB,EAAOhB,QAAQ,iBAGnBC,EAA6BsC,KAAUA,SAE/B,KAAVA,GACE9D,OAAO+D,oBAAoBD,GAAOE,SAAS,WAA6B,GAAhBF,EAAMG,QAC9DjE,OAAO+D,oBAAoBD,GAAOE,SAAS,SAAyB,GAAdF,EAAMI,MAC5DlC,EAAM,YACNN,EAAM,cACNK,EAAM,aAKND,EAAM,WACND,EAAM,YACNJ,EAAS,yBC/MR,MAAM0C,UAAkC,oBAE1CC,GAAG,IACD/E,IAEF4C,GAAE,SAAUoC,EAASC,EAAIC,EAAQC,GAClC,MAAO,EACH,QAAeD,EAAQrE,KAAKuE,UAAWvE,KAAKwE,cAC5C,QAAkBH,EAAQF,EAAQM,oCAE1C,IACKC,EAAE,mBAAoB,qBAAsB,CAAC,GAC7CC,EAAE,YAAa,6BACfC,EAAEpE,EAA6CM,GAC/C+D,IAAI7D,GACJ8D,GAAG1C,GACHD,U,8FCrBE,MAAM4C,EAA6C9D,MAAOoD,EAAQlD,EAASD,KACvE,CACH8D,WAAW,OAAiB7D,GAAS6D,UACrCC,aAAe,OAAkBZ,EAAOY,OAAzB,IACX,MACI,MAAM,IAAIC,MAAM,0DACnB,EAFD,KAyBCC,EAAoCC,IAC7C,MAAMxF,EAAU,GAChB,OAAQwF,EAAeJ,WACnB,IAAK,qBAIL,IAAK,mBAIL,IAAK,eAIL,IAAK,SACDpF,EAAQyF,KApBT,CACHC,SAAU,sBAoBN,MAEJ,QACI1F,EAAQyF,KAxCpB,SAA0CD,GACtC,MAAO,CACHE,SAAU,iBACVC,kBAAmB,CACfjG,KAAM,eACN2F,OAAQG,EAAeH,QAE3BO,oBAAqB,CAACnB,EAAQlD,KAAY,CACtCoE,kBAAmB,CACflB,SACAlD,aAIhB,CA0ByBsE,CAAiCL,IAGtD,OAAOxF,CAAO,E,8HCtDlB,MAAM8F,GAAI,WAAYC,GAAI,KAAMC,GAAI,OAAQC,GAAI,MAChCzE,GAAI,QAAS0E,GAAI,gBAAiBC,GAAI,QAASC,GAAI,WAAYpB,GAAI,OAAQqB,GAAI,kBAAmBjE,GAAI,UAAWkE,GAAI,CAAE,CAACR,KAAI,EAAO,KAAQ,UAAYS,GAAI,CAAE,CAACT,KAAI,EAAM,SAAW,EAAO,KAAQ,WAAaU,GAAI,CAAE,CAACP,IAAI,YAAcQ,GAAI,CAAE,CAACV,IAAIG,GAAG,CAACF,IAAI,CAAC,CAAE,CAACC,IAAI,YAAa,IAAS9D,GAAI,CAAE,CAAC4D,IAAIG,GAAG,CAACF,IAAI,CAAC,CAAE,CAACC,IAAI,iBAAkB,IAASlB,GAAI,CAAC,EAAGL,GAAI,CAAE,CAACqB,IAAI3D,GAAG,CAAC4D,IAAI,CAAC,CAAE,CAACC,IAAII,IAAK,iBAAmBK,GAAI,CAAE,CAACT,IAAII,IAAKhE,GAAI,CAAE,CAAC0D,IAAIG,GAAG,CAACF,IAAI,EAAC,EAAM,CAAE,CAACD,IAAI3D,GAAG,CAAC4D,IAAI,CAACU,GAAG,wBAA2BC,GAAI,CAACF,IAAI3B,GAAI,CAAC3C,IAAIyE,GAAI,CAAC,CAAE,CAACX,IAAI,WAEngBY,GADC,CAAEC,QAAS,MAAOC,WAAY,CAAEnH,OAAQ0G,GAAGzG,aAAc0G,GAAG/G,QAAS+G,GAAG5G,SAAU2G,IAAKU,MAAO,CAAC,CAAEC,WAAY,CAAC,CAAE,CAAClB,IAAIvE,GAAG,CAACwE,IAAI,CAACQ,MAAOQ,MAAO,CAAC,CAAEC,WAAYN,GAAGO,MAAO,oEAAqEzH,KAAM0G,IAAK,CAAEc,WAAYnC,GAAGoC,MAAO,yEAA0EzH,KAAM0G,IAAK,CAAEgB,SAAU,CAAEC,IAAKZ,GAAGa,WAAYtC,GAAGtD,QAASsD,IAAKtF,KAAM2G,KAAM3G,KAAMuF,IAAK,CAAEiC,WAAY,CAAC,CAAE,CAAClB,IAAIvE,GAAG,CAACwE,IAAIY,KAAMI,MAAO,CAAC,CAAEC,WAAY,CAAC,CAAE,CAAClB,IAAI,gBAAiB,CAACC,IAAIY,GAAG3D,OAAQoD,KAAMW,MAAO,CAAC,CAAEC,WAAY,CAACR,GAAGtE,IAAI6E,MAAO,CAAC,CAAEC,WAAY,CAAC,CAAE,CAAClB,IAAIG,GAAG,CAACF,IAAI,EAD7lB,EACimBtB,KAAMrC,IAAI2E,MAAO,CAAC,CAAEG,SAAU,CAAEC,IAAK,wEAAyEC,WAAYtC,GAAGtD,QAASsD,IAAKtF,KAAM2G,KAAM3G,KAAMuF,IAAK,CAAEkC,MAAO,kFAAmFzH,KAAM0G,KAAM1G,KAAMuF,IAAK,CAAEiC,WAAYN,GAAGK,MAAO,CAAC,CAAEC,WAAY,CAAC,CAAE,CAAClB,IAAIG,GAAG,CAACF,IAAI,CAACtB,IAD96B,KACw7BsC,MAAO,CAAC,CAAEC,WAAY,CAAC,CAAE,CAAClB,IAAI,eAAgB,CAACC,IAAI,CAAC,CAAE,CAACD,IAAI3D,GAAG,CAAC4D,IAAI,CAACU,GAAG,SAAW,gBAAkBS,SAAU,CAAEC,IAAK,4CAA6CC,WAAYtC,GAAGtD,QAASsD,IAAKtF,KAAM2G,IAAK,CAAEe,SAAU,CAAEC,IAAK,+DAAgEC,WAAYtC,GAAGtD,QAASsD,IAAKtF,KAAM2G,KAAM3G,KAAMuF,IAAK,CAAEkC,MAAO,2DAA4DzH,KAAM0G,KAAM1G,KAAMuF,IAAK,CAAEiC,WAAYnC,GAAGkC,MAAO,CAAC,CAAEC,WAAY,CAAC5E,IAAI2E,MAAO,CAAC,CAAEG,SAAU,CAAEC,IAAK,mEAAoEC,WAAYtC,GAAGtD,QAASsD,IAAKtF,KAAM2G,KAAM3G,KAAMuF,IAAK,CAAEkC,MAAO,qEAAsEzH,KAAM0G,KAAM1G,KAAMuF,IAAK,CAAEmC,SAAU,CAAEC,IAAK,0DAA2DC,WAAYtC,GAAGtD,QAASsD,IAAKtF,KAAM2G,KAAM3G,KAAMuF,KAAMvF,KAAMuF,IAAK,CAAEkC,MAAO,wCAAyCzH,KAAM0G,MCA70DmB,GAA0B,CAACC,EAAgBhG,EAAU,CAAC,KACxD,SAAgBsF,GAAS,CAC5BU,eAAgBA,EAChBC,OAAQjG,EAAQiG,S,yCCLjB,MAAMC,GAAqCC,IAC9C,MAAMC,EAAmBD,EAAcE,gBACvC,IAAIC,EAA0BH,EAAcI,uBACxCC,EAAeL,EAAcM,YACjC,MAAO,CACHC,kBAAkBC,GACd,MAAMC,EAAQR,EAAiBS,WAAWC,GAAWA,EAAO3C,WAAawC,EAAexC,YACzE,IAAXyC,EACAR,EAAiBlC,KAAKyC,GAGtBP,EAAiBW,OAAOH,EAAO,EAAGD,EAE1C,EACAN,gBAAe,IACJD,EAEXY,0BAA0BT,GACtBD,EAA0BC,CAC9B,EACAA,uBAAsB,IACXD,EAEXW,eAAeR,GACXD,EAAeC,CACnB,EACAA,YAAW,IACAD,EAEd,ECdE,MAAMU,WAAkB,KAC3B1I,gBAAgB2I,IACZ,MAAMC,ECHkB,CAAClE,KAC7B,QAAgCmE,QAAQ9B,SACxC,MAAM+B,GAAe,QAA0BpE,GACzCqE,EAAwB,IAAMD,IAAeE,KAAK,MAClDC,ECVsB,CAACvE,IACtB,CACHwE,WAAY,aACZC,cAAezE,GAAQyE,eAAiB,KACxCC,cAAe1E,GAAQ0E,eAAiB,KACxCC,kBAAmB3E,GAAQ2E,oBAAqB,EAChDC,iBAAkB5E,GAAQ4E,kBAAoB/B,GAC9CgC,WAAY7E,GAAQ6E,YAAc,GAClCxB,uBAAwBrD,GAAQqD,wBAA0BvC,EAC1DqC,gBAAiBnD,GAAQmD,iBAAmB,CACxC,CACIlC,SAAU,iBACV6D,iBAAmBC,GAAQA,EAAIC,oBAAoB,kBACnDC,OAAQ,IAAIC,EAAA,GAEhB,CACIjE,SAAU,oBACV6D,iBAAmBC,GAAQA,EAAIC,oBAAoB,sBAAwB,WAAa,CAAG,IAC3FC,OAAQ,IAAI,OAGpBlC,OAAQ/C,GAAQ+C,QAAU,IAAI,KAC9BoC,UAAWnF,GAAQmF,WAAa,MAChCC,UAAWpF,GAAQoF,WAAa,IAChCC,YAAarF,GAAQqF,aAAe,MACpCC,YAAatF,GAAQsF,aAAe,QDfb,CAAuBtF,GAElD,OADA,OAAgBmE,QAAQ9B,SACjB,IACAkC,KACAvE,EACHuF,QAAS,OACTnB,eACAoB,kBAAmBxF,GAAQwF,mBAAqB,IAChDC,yBAA0BzF,GAAQyF,2BAC9B,QAAiB,CAAEN,UAAWZ,EAAmBY,UAAWO,c,YAChEC,YAAa3F,GAAQ2F,cAAe,OAAe,MACnD/E,OAAQZ,GAAQY,SAAU,OAAe,KAA4B,MACrEgF,eAAgB,YAAsB5F,GAAQ4F,gBAAkBvB,GAChEwB,UAAW7F,GAAQ6F,YACf,OAAe,IACR,KACHC,QAASlJ,gBAAmByH,KAAyBwB,WAAa,OAE1EE,OAAQ/F,GAAQ+F,QAAU,SAAU,KAAM,UAC1CC,gBAAiBhG,GAAQgG,iBAAmB,KAC5CC,qBAAsBjG,GAAQiG,uBAAwB,OAAe,MACrEC,gBAAiBlG,GAAQkG,kBAAmB,OAAe,MAC9D,EDvBqB,CAAmBjC,GAAiB,CAAC,GACjDkC,GTlBkC5K,ESkBU2I,ETjB/C,IACA3I,EACH0K,qBAAsB1K,EAAQ0K,uBAAwB,EACtDC,gBAAiB3K,EAAQ2K,kBAAmB,EAC5CE,mBAAoB,iBALmB,IAAC7K,ESmBxC,MAAM8K,GAAY,QAAoBF,GAChCG,GAAY,QAAsBD,GAClCE,GAAY,QAAmBD,GAC/BE,GAAY,QAAwBD,GJkCP,IAACvG,EI/BpC,MAAMyG,EGpB0B,EAACxD,EAAe4B,KACpD,MAAM6B,EAAyB,KACd,SAAmCzD,OACnC,QAAiCA,OACjC,SAAqCA,MACrCD,GAAkCC,IAGnD,OADA4B,EAAW8B,SAASC,GAAcA,EAAUC,UAAUH,KAC/C,IACAzD,MACA,SAAuCyD,OACvC,QAA4BA,OAC5B,SAAgCA,OJcE1G,EIbL0G,EJc7B,CACHvD,gBAAiBnD,EAAOmD,kBACxBE,uBAAwBrD,EAAOqD,yBAC/BE,YAAavD,EAAOuD,iBAJgB,IAACvD,CIZxC,EHMqB8G,EJ+BkB9G,GIjClB,QAAuBwG,GJmCtC,KADU,EAAAO,EAAA,GAAyB/G,KIhCgBiE,GAAeY,YAAc,IACnFrJ,MAAMiL,GACN9K,KAAKqE,OAASyG,EACd9K,KAAKqL,gBAAgBC,KAAI,QAAetL,KAAKqE,SAC7CrE,KAAKqL,gBAAgBC,KAAI,QAAuBtL,KAAKqE,SACrDrE,KAAKqL,gBAAgBC,KAAI,QAAoBtL,KAAKqE,SAClDrE,KAAKqL,gBAAgBC,KAAI,QAAgBtL,KAAKqE,SAC9CrE,KAAKqL,gBAAgBC,KAAI,QAA4BtL,KAAKqE,SAC1DrE,KAAKqL,gBAAgBC,KAAI,QAAmBtL,KAAKqE,SACjDrE,KAAKqL,gBAAgBC,KAAI,QAAuCtL,KAAKqE,OAAQ,CACzEkH,iCAAkCvL,KAAKwL,6CACvCC,+BAAgCzL,KAAK0L,uCAEzC1L,KAAKqL,gBAAgBC,KAAI,QAAqBtL,KAAKqE,QACvD,CACAsH,UACI9L,MAAM8L,SACV,CACAH,6CACI,OAAOzG,CACX,CACA2G,oCACI,OAAOzK,MAAOoD,GAAW,IAAI,KAA8B,CACvD,iBAAkBA,EAAOuD,aAEjC,E","file":"769.js","sourcesContent":["export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssoportal\",\n    };\n};\nexport const commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class SSOServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { SSOServiceException as __BaseException } from \"./SSOServiceException\";\nexport class InvalidRequestException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n    }\n}\nexport class ResourceNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport class TooManyRequestsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRequestsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexport class UnauthorizedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedException.prototype);\n    }\n}\nexport const GetRoleCredentialsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const RoleCredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.secretAccessKey && { secretAccessKey: SENSITIVE_STRING }),\n    ...(obj.sessionToken && { sessionToken: SENSITIVE_STRING }),\n});\nexport const GetRoleCredentialsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.roleCredentials && { roleCredentials: RoleCredentialsFilterSensitiveLog(obj.roleCredentials) }),\n});\nexport const ListAccountRolesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const ListAccountsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const LogoutRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\n","import { loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { requestBuilder as rb } from \"@smithy/core\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map, take, withBaseException, } from \"@smithy/smithy-client\";\nimport { InvalidRequestException, ResourceNotFoundException, TooManyRequestsException, UnauthorizedException, } from \"../models/models_0\";\nimport { SSOServiceException as __BaseException } from \"../models/SSOServiceException\";\nexport const se_GetRoleCredentialsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/federation/credentials\");\n    const query = map({\n        [_rn]: [, __expectNonNull(input[_rN], `roleName`)],\n        [_ai]: [, __expectNonNull(input[_aI], `accountId`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListAccountRolesCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/assignment/roles\");\n    const query = map({\n        [_nt]: [, input[_nT]],\n        [_mr]: [() => input.maxResults !== void 0, () => input[_mR].toString()],\n        [_ai]: [, __expectNonNull(input[_aI], `accountId`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListAccountsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/assignment/accounts\");\n    const query = map({\n        [_nt]: [, input[_nT]],\n        [_mr]: [() => input.maxResults !== void 0, () => input[_mR].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_LogoutCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/logout\");\n    let body;\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const de_GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        roleCredentials: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        nextToken: __expectString,\n        roleList: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        accountList: _json,\n        nextToken: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnauthorizedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst _aI = \"accountId\";\nconst _aT = \"accessToken\";\nconst _ai = \"account_id\";\nconst _mR = \"maxResults\";\nconst _mr = \"max_result\";\nconst _nT = \"nextToken\";\nconst _nt = \"next_token\";\nconst _rN = \"roleName\";\nconst _rn = \"role_name\";\nconst _xasbt = \"x-amz-sso_bearer_token\";\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { GetRoleCredentialsRequestFilterSensitiveLog, GetRoleCredentialsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_GetRoleCredentialsCommand, se_GetRoleCredentialsCommand } from \"../protocols/Aws_restJson1\";\nexport { $Command };\nexport class GetRoleCredentialsCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SWBPortalService\", \"GetRoleCredentials\", {})\n    .n(\"SSOClient\", \"GetRoleCredentialsCommand\")\n    .f(GetRoleCredentialsRequestFilterSensitiveLog, GetRoleCredentialsResponseFilterSensitiveLog)\n    .ser(se_GetRoleCredentialsCommand)\n    .de(de_GetRoleCredentialsCommand)\n    .build() {\n}\n","import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nexport const defaultSSOHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"awsssoportal\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSSOHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"GetRoleCredentials\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"ListAccountRoles\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"ListAccounts\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"Logout\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    return {\n        ...config_0,\n    };\n};\n","const u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = { [u]: false, \"type\": \"String\" }, j = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [x]: \"Endpoint\" }, l = { [v]: c, [w]: [{ [x]: \"UseFIPS\" }, true] }, m = { [v]: c, [w]: [{ [x]: \"UseDualStack\" }, true] }, n = {}, o = { [v]: h, [w]: [{ [x]: g }, \"supportsFIPS\"] }, p = { [x]: g }, q = { [v]: c, [w]: [true, { [v]: h, [w]: [p, \"supportsDualStack\"] }] }, r = [l], s = [m], t = [{ [x]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, o] }, q], rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [o, a] }], rules: [{ conditions: [{ [v]: \"stringEquals\", [w]: [{ [v]: h, [w]: [p, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://portal.sso.{Region}.amazonaws.com\", properties: n, headers: n }, type: e }, { endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSSOHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class SSOClient extends __Client {\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveUserAgentConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n            identityProviderConfigProvider: this.getIdentityProviderConfigProvider(),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n    getDefaultHttpAuthSchemeParametersProvider() {\n        return defaultSSOHttpAuthSchemeParametersProvider;\n    }\n    getIdentityProviderConfigProvider() {\n        return async (config) => new DefaultIdentityProviderConfig({\n            \"aws.auth#sigv4\": config.credentials,\n        });\n    }\n}\n","import packageInfo from \"../package.json\";\nimport { emitWarningIfUnsupportedVersion as awsCheckVersion } from \"@aws-sdk/core\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSSOHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2019-06-10\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSSOHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSO\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n"],"sourceRoot":""}